/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PersonManager;
import model.*;
import javax.swing.*;
import java.awt.CardLayout;
import javax.swing.table.*;
/**
 *
 * @author Yulun Feng
 */
public class ManageProfileJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    ProfileDirectory profileDirectory;
    
    /**
     * Creates new form ManagerPeopleJPanel
     */
    public ManageProfileJPanel(JPanel userProcessContainer, ProfileDirectory profileDirectory) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.profileDirectory = profileDirectory;
        populateTable();
    }
    
     public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tblProfiles.getModel();
        model.setRowCount(0);
        for(Profile profile:profileDirectory.getProfile()){
            Object[] row = new Object[16];
            row[0] = profile; // Store Profile profile in row[0], and use toString to display the first column thing
            row[1] = profile.getLastName();
            row[2] = profile.getSocialSecurityNumber();
            row[3] = profile.getAge();
            row[4] = profile.getHomeAddress().getStreetAddress();
            row[5] = profile.getHomeAddress().getUnitNumber();
            row[6] = profile.getHomeAddress().getCity();
            row[7] = profile.getHomeAddress().getState();
            row[8] = profile.getHomeAddress().getZipCode();
            row[9] = profile.getHomeAddress().getPhoneNumber();
            row[10] = profile.getWorkAddress().getStreetAddress();
            row[11] = profile.getWorkAddress().getUnitNumber();
            row[12] = profile.getWorkAddress().getCity();
            row[13] = profile.getWorkAddress().getState();
            row[14] = profile.getWorkAddress().getZipCode();  
            row[15] = profile.getWorkAddress().getPhoneNumber();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnViewDetail = new javax.swing.JButton();
        btnDeleteProfile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProfiles = new javax.swing.JTable();

        setBackground(new java.awt.Color(176, 190, 197));

        btnBack.setText("<<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Profiles");

        btnViewDetail.setText("View Detail");
        btnViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailActionPerformed(evt);
            }
        });

        btnDeleteProfile.setText("Delete Profile");
        btnDeleteProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProfileActionPerformed(evt);
            }
        });

        tblProfiles.setBackground(new java.awt.Color(212, 212, 212));
        tblProfiles.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tblProfiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "FirstName", "LastName", "SSN", "Age", "HomeStreet", "HomeUnit", "HomeCity", "HomeState", "HomeZip", "HomePhone", "WorkStreet", "WorkUnit", "WorkCity", "WorkState", "WorkZip", "WorkPhone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProfiles.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblProfiles.setGridColor(new java.awt.Color(212, 212, 212));
        tblProfiles.setShowHorizontalLines(true);
        tblProfiles.setShowVerticalLines(true);
        jScrollPane1.setViewportView(tblProfiles);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(btnViewDetail)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteProfile)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDeleteProfile, btnViewDetail});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTitle)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewDetail)
                    .addComponent(btnDeleteProfile))
                .addGap(122, 122, 122))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProfiles.getSelectedRow();
        // Selection success
        if(selectedRow>=0){
            /*
            System.out.println(tblProfiles.getValueAt(selectedRow, 0)); //FName
            System.out.println(tblProfiles.getValueAt(selectedRow, 1)); //LName
            */
            Profile selectedProfile = (Profile)tblProfiles.getValueAt(selectedRow, 0);
            ViewProfileJPanel panel = new ViewProfileJPanel(userProcessContainer, profileDirectory, selectedProfile);
            userProcessContainer.add("ViewProfileJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select an account from the list to view","Warning" ,JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnViewDetailActionPerformed

    private void btnDeleteProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProfileActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProfiles.getSelectedRow();
        if (selectedRow>0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the selected profile?", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                Profile selecedProfile = (Profile) tblProfiles.getValueAt(selectedRow, 0);
                profileDirectory.deleteAccount(selecedProfile);
                populateTable();
            }
            else{
                JOptionPane.showMessageDialog(null, "Please select a profile from the list.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteProfileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteProfile;
    private javax.swing.JButton btnViewDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblProfiles;
    // End of variables declaration//GEN-END:variables
}
